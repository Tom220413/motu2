version: "3.0"

services:
  backend:
    volumes:
      - ./backend:/app
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    env_file: ./dev.env
    environment:
      TZ: Asia/Tokyo
      OPS_DB_HOST: mongo
    ports:
      - 8080:8080
    networks:
      - mongo_network
    depends_on:
      - mongo

  frontend:
    build:
      context: .
      dockerfile: docker/nodejs/Dockerfile
    volumes:
      - ./frontend:/src # ローカルをコンテナ内にマウント
    command: sh -c "cd react-project && npm cache clean --force && yarn start" #コンテナを立ち上げたときに自動的にbuildする
    ports:
      - "3000:3000"
    networks:
      - mongo_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mongo_network

  mongo:
    image: mongo:4.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'dummy'
    # volumes:
    #   - mongodb_data1:/data/db
    volumes:
      - ./mongodb_data1/db/db-data:/data/db-data
      - ./mongodb_data1/db/configdb:/data/configdb
      - ./mongodb_data1/prefecture.json:/docker-entrypoint-initdb.d/prefecture.json
      - ./mongodb_data1/users.json:/docker-entrypoint-initdb.d/users.json
      - ./mongodb_data1/store.json:/docker-entrypoint-initdb.d/store.json
      - ./mongodb_data1/review.json:/docker-entrypoint-initdb.d/review.json
      - ./mongodb_data1/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./mongodb_data1/dump:/home/dump
    container_name: mongo_server
    networks:
      - mongo_network

  mongo-express:
    image: mongo-express
    networks:
      - mongo_network
    restart: always
    links:
      - 'mongo:mongo'
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'dummy'
      ME_CONFIG_MONGODB_SERVER: 'mongo'
    depends_on:
      - mongo
  mongo-client:
    image: mongo
    networks:
      - mongo_network
    restart: always
    volumes:
      - mongodb_data2:/data/db

volumes:
  mongodb_data1:
  mongodb_data2:


networks:
  mongo_network:
